<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="17" type="file" uuid="26c8ba28-3e84-4689-9245-33837575b71c">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <node name="root" prototype="core.network" renderedChild="colorize1">
        <node name="centroid1" position="6.00,6.00" prototype="corevector.centroid"/>
        <node name="centroid2" position="-3.00,5.00" prototype="corevector.centroid"/>
        <node name="centroid3" position="8.00,17.00" prototype="corevector.centroid"/>
        <node name="colorize1" position="-1.00,31.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#ffffffff"/>
        </node>
        <node name="compound2" position="-3.00,4.00" prototype="corevector.compound">
            <port name="function" type="string" value="intersected"/>
        </node>
        <node name="count1" position="1.00,19.00" prototype="list.count"/>
        <node name="distinct1" position="0.00,5.00" prototype="list.distinct"/>
        <node name="ellipse1" position="0.00,16.00" prototype="corevector.ellipse">
            <port name="width" type="float" value="1.0"/>
            <port name="height" type="float" value="1.0"/>
        </node>
        <node name="ellipse2" position="0.00,2.00" prototype="corevector.ellipse">
            <port name="width" type="float" value="1.0"/>
            <port name="height" type="float" value="1.0"/>
        </node>
        <node name="ellipse3" position="-3.00,7.00" prototype="corevector.ellipse">
            <port name="width" type="float" value="2.0"/>
            <port name="height" type="float" value="2.0"/>
        </node>
        <node name="frame1" position="12.00,21.00" prototype="core.frame"/>
        <node name="grid1" position="0.00,1.00" prototype="corevector.grid">
            <port name="columns" type="int" value="64"/>
            <port name="rows" type="int" value="1"/>
            <port name="width" type="float" value="800.0"/>
            <port name="height" type="float" value="6.0"/>
        </node>
        <node name="import_svg1" position="-3.00,0.00" prototype="corevector.import_svg">
            <port name="file" type="string" value="scatter_top.svg"/>
        </node>
        <node name="lookup1" position="6.00,7.00" prototype="data.lookup">
            <port name="key" type="string" value="y"/>
        </node>
        <node name="lookup2" position="8.00,18.00" prototype="data.lookup">
            <port name="key" type="string" value="y"/>
        </node>
        <node name="make_point1" position="3.00,-1.00" prototype="corevector.make_point"/>
        <node name="make_point2" position="1.00,28.00" prototype="corevector.make_point"/>
        <node name="max1" position="10.00,9.00" prototype="math.max"/>
        <node name="max2" position="12.00,20.00" prototype="math.max"/>
        <node name="min1" position="7.00,9.00" prototype="math.min"/>
        <node name="min2" position="9.00,20.00" prototype="math.min"/>
        <node name="multiply1" position="1.00,21.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node name="multiply2" position="4.00,24.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node name="network3" position="2.00,10.00" prototype="core.network" renderedChild="range2">
            <node name="count1" position="-4.00,7.00" prototype="list.count"/>
            <node name="range2" position="-4.00,8.00" prototype="math.range"/>
            <port childReference="count1.list" name="list" range="list" type="list" widget="none"/>
            <conn input="range2.end" output="count1"/>
        </node>
        <node name="number2" position="-6.00,5.00" prototype="math.number">
            <port name="value" type="float" value="24.0"/>
        </node>
        <node name="point1" position="3.00,14.00" prototype="corevector.point"/>
        <node name="randomNum" position="8.00,22.00" prototype="math.convert_range">
            <port name="target_start" type="float" value="50.0"/>
            <port name="target_end" type="float" value="0.0"/>
        </node>
        <node name="random_numbers1" position="1.00,26.00" prototype="math.random_numbers">
            <port name="amount" type="int" value="1"/>
            <port name="seed" type="int" value="-3"/>
        </node>
        <node name="random_numbers2" position="4.00,26.00" prototype="math.random_numbers">
            <port name="amount" type="int" value="1"/>
            <port name="seed" type="int" value="-3"/>
        </node>
        <node name="random_numbers3" position="-2.00,13.00" prototype="math.random_numbers">
            <port name="start" type="float" value="0.5"/>
            <port name="end" type="float" value="2.0"/>
        </node>
        <node name="range1" position="3.00,-2.00" prototype="math.range">
            <port name="start" type="float" value="-90.0"/>
            <port name="end" type="float" value="100.0"/>
            <port name="step" type="float" value="10.0"/>
        </node>
        <node name="range2" position="1.00,20.00" prototype="math.range"/>
        <node name="scatter2" position="3.00,13.00" prototype="corevector.scatter"/>
        <node name="scatterNum" position="6.00,11.00" prototype="math.convert_range">
            <port name="target_start" type="float" value="20.0"/>
        </node>
        <node name="wiggle1" position="-1.00,30.00" prototype="corevector.wiggle">
            <port name="scope" type="string" value="paths"/>
        </node>
        <conn input="point1.value" output="scatter2"/>
        <conn input="ellipse1.position" output="point1"/>
        <conn input="make_point1.y" output="range1"/>
        <conn input="grid1.position" output="make_point1"/>
        <conn input="compound2.shape1" output="import_svg1"/>
        <conn input="ellipse2.position" output="grid1"/>
        <conn input="compound2.shape2" output="ellipse2"/>
        <conn input="centroid2.shape" output="compound2"/>
        <conn input="distinct1.list" output="centroid2"/>
        <conn input="ellipse3.position" output="distinct1"/>
        <conn input="scatter2.shape" output="ellipse3"/>
        <conn input="ellipse3.height" output="number2"/>
        <conn input="ellipse3.width" output="number2"/>
        <conn input="wiggle1.shape" output="ellipse1"/>
        <conn input="scatter2.seed" output="network3"/>
        <conn input="wiggle1.offset" output="make_point2"/>
        <conn input="network3.list" output="ellipse3"/>
        <conn input="lookup1.list" output="centroid1"/>
        <conn input="min1.values" output="lookup1"/>
        <conn input="max1.values" output="lookup1"/>
        <conn input="centroid1.shape" output="ellipse3"/>
        <conn input="lookup2.list" output="centroid3"/>
        <conn input="min2.values" output="lookup2"/>
        <conn input="max2.values" output="lookup2"/>
        <conn input="centroid3.shape" output="ellipse1"/>
        <conn input="range2.end" output="count1"/>
        <conn input="multiply1.value1" output="range2"/>
        <conn input="random_numbers1.seed" output="multiply1"/>
        <conn input="count1.list" output="ellipse1"/>
        <conn input="random_numbers2.seed" output="range2"/>
        <conn input="make_point2.y" output="random_numbers2"/>
        <conn input="make_point2.x" output="random_numbers1"/>
        <conn input="random_numbers2.start" output="multiply2"/>
        <conn input="random_numbers1.start" output="multiply2"/>
        <conn input="scatterNum.value" output="lookup1"/>
        <conn input="scatterNum.source_start" output="min1"/>
        <conn input="scatterNum.source_end" output="max1"/>
        <conn input="scatter2.amount" output="scatterNum"/>
        <conn input="randomNum.value" output="lookup2"/>
        <conn input="randomNum.source_start" output="min2"/>
        <conn input="randomNum.source_end" output="max2"/>
        <conn input="random_numbers2.end" output="randomNum"/>
        <conn input="random_numbers1.end" output="randomNum"/>
        <conn input="multiply2.value1" output="randomNum"/>
        <conn input="randomNum.target_start" output="frame1"/>
        <conn input="random_numbers3.seed" output="network3"/>
        <conn input="ellipse1.width" output="random_numbers3"/>
        <conn input="ellipse1.height" output="random_numbers3"/>
        <conn input="random_numbers3.amount" output="scatterNum"/>
        <conn input="colorize1.shape" output="wiggle1"/>
    </node>
</ndbx>
